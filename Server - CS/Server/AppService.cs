// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: AppService.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Generated.Protobuf {

  /// <summary>Holder for reflection information generated from AppService.proto</summary>
  public static partial class AppServiceReflection {

    #region Descriptor
    /// <summary>File descriptor for AppService.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static AppServiceReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChBBcHBTZXJ2aWNlLnByb3RvIicKB1VzZXJEVE8SCgoCaWQYASABKAkSEAoI",
            "cGFzc3dvcmQYAiABKAkiTgoHU2FsZURUTxIPCgdpZE1hdGNoGAEgASgJEhAK",
            "CHF1YW50aXR5GAIgASgFEg4KBnBlcnNvbhgDIAEoCRIQCgh1c2VybmFtZRgE",
            "IAEoCSJjCghNYXRjaERUTxIKCgJpZBgBIAEoBRINCgV0ZWFtMRgCIAEoCRIN",
            "CgV0ZWFtMhgDIAEoCRINCgVzdGFnZRgEIAEoCRIPCgd0aWNrZXRzGAUgASgF",
            "Eg0KBXByaWNlGAYgASgBIswBCgdSZXF1ZXN0EhsKBHR5cGUYASABKA4yDS5S",
            "ZXF1ZXN0LlR5cGUSDQoFZXJyb3IYAiABKAkSFgoEc2FsZRgDIAEoCzIILlNh",
            "bGVEVE8SFgoEdXNlchgEIAEoCzIILlVzZXJEVE8iZQoEVHlwZRIKCgZVTktO",
            "T1cQABIJCgVMT0dJThABEgoKBkxPR09VVBACEhAKDFNFTExfVElDS0VUUxAD",
            "EgsKB0dFVF9BTEwQBBIbChdHRVRfQUxMX0ZJTFRFUkVEX1NPUlRFRBAFIoEC",
            "CghSZXNwb25zZRIcCgR0eXBlGAEgASgOMg4uUmVzcG9uc2UuVHlwZRINCgVl",
            "cnJvchgCIAEoCRIYCgVtYXRjaBgDIAEoCzIJLk1hdGNoRFRPEhwKCW1hdGNo",
            "TGlzdBgEIAMoCzIJLk1hdGNoRFRPIo8BCgRUeXBlEgoKBlVOS05PVxAAEgYK",
            "Ak9LEAESCQoFRVJST1IQAhIZChVTSE9XX1VQREFURURfRU5USVRJRVMQAxIW",
            "ChJHRVRfTE9HR0VEX0ZSSUVORFMQBBIUChBGUklFTkRfTE9HR0VEX0lOEAUS",
            "FQoRRlJJRU5EX0xPR0dFRF9PVVQQBhIICgRTT0xEEAcyNAoKQXBwU2Vydmlj",
            "ZRImCgtzZW5kUmVxdWVzdBIILlJlcXVlc3QaCS5SZXNwb25zZSgBMAFCKwoS",
            "R2VuZXJhdGVkLlByb3RvYnVmUAGqAhJHZW5lcmF0ZWQuUHJvdG9idWZiBnBy",
            "b3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Generated.Protobuf.UserDTO), global::Generated.Protobuf.UserDTO.Parser, new[]{ "Id", "Password" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Generated.Protobuf.SaleDTO), global::Generated.Protobuf.SaleDTO.Parser, new[]{ "IdMatch", "Quantity", "Person", "Username" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Generated.Protobuf.MatchDTO), global::Generated.Protobuf.MatchDTO.Parser, new[]{ "Id", "Team1", "Team2", "Stage", "Tickets", "Price" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Generated.Protobuf.Request), global::Generated.Protobuf.Request.Parser, new[]{ "Type", "Error", "Sale", "User" }, null, new[]{ typeof(global::Generated.Protobuf.Request.Types.Type) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Generated.Protobuf.Response), global::Generated.Protobuf.Response.Parser, new[]{ "Type", "Error", "Match", "MatchList" }, null, new[]{ typeof(global::Generated.Protobuf.Response.Types.Type) }, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class UserDTO : pb::IMessage<UserDTO> {
    private static readonly pb::MessageParser<UserDTO> _parser = new pb::MessageParser<UserDTO>(() => new UserDTO());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UserDTO> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Generated.Protobuf.AppServiceReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserDTO() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserDTO(UserDTO other) : this() {
      id_ = other.id_;
      password_ = other.password_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserDTO Clone() {
      return new UserDTO(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "password" field.</summary>
    public const int PasswordFieldNumber = 2;
    private string password_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Password {
      get { return password_; }
      set {
        password_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UserDTO);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UserDTO other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Password != other.Password) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (Password.Length != 0) hash ^= Password.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (Password.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Password);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (Password.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Password);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UserDTO other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.Password.Length != 0) {
        Password = other.Password;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            Password = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class SaleDTO : pb::IMessage<SaleDTO> {
    private static readonly pb::MessageParser<SaleDTO> _parser = new pb::MessageParser<SaleDTO>(() => new SaleDTO());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SaleDTO> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Generated.Protobuf.AppServiceReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SaleDTO() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SaleDTO(SaleDTO other) : this() {
      idMatch_ = other.idMatch_;
      quantity_ = other.quantity_;
      person_ = other.person_;
      username_ = other.username_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SaleDTO Clone() {
      return new SaleDTO(this);
    }

    /// <summary>Field number for the "idMatch" field.</summary>
    public const int IdMatchFieldNumber = 1;
    private string idMatch_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string IdMatch {
      get { return idMatch_; }
      set {
        idMatch_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "quantity" field.</summary>
    public const int QuantityFieldNumber = 2;
    private int quantity_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Quantity {
      get { return quantity_; }
      set {
        quantity_ = value;
      }
    }

    /// <summary>Field number for the "person" field.</summary>
    public const int PersonFieldNumber = 3;
    private string person_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Person {
      get { return person_; }
      set {
        person_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "username" field.</summary>
    public const int UsernameFieldNumber = 4;
    private string username_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Username {
      get { return username_; }
      set {
        username_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SaleDTO);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SaleDTO other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (IdMatch != other.IdMatch) return false;
      if (Quantity != other.Quantity) return false;
      if (Person != other.Person) return false;
      if (Username != other.Username) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (IdMatch.Length != 0) hash ^= IdMatch.GetHashCode();
      if (Quantity != 0) hash ^= Quantity.GetHashCode();
      if (Person.Length != 0) hash ^= Person.GetHashCode();
      if (Username.Length != 0) hash ^= Username.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (IdMatch.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(IdMatch);
      }
      if (Quantity != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Quantity);
      }
      if (Person.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Person);
      }
      if (Username.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Username);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (IdMatch.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(IdMatch);
      }
      if (Quantity != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Quantity);
      }
      if (Person.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Person);
      }
      if (Username.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Username);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SaleDTO other) {
      if (other == null) {
        return;
      }
      if (other.IdMatch.Length != 0) {
        IdMatch = other.IdMatch;
      }
      if (other.Quantity != 0) {
        Quantity = other.Quantity;
      }
      if (other.Person.Length != 0) {
        Person = other.Person;
      }
      if (other.Username.Length != 0) {
        Username = other.Username;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            IdMatch = input.ReadString();
            break;
          }
          case 16: {
            Quantity = input.ReadInt32();
            break;
          }
          case 26: {
            Person = input.ReadString();
            break;
          }
          case 34: {
            Username = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class MatchDTO : pb::IMessage<MatchDTO> {
    private static readonly pb::MessageParser<MatchDTO> _parser = new pb::MessageParser<MatchDTO>(() => new MatchDTO());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MatchDTO> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Generated.Protobuf.AppServiceReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MatchDTO() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MatchDTO(MatchDTO other) : this() {
      id_ = other.id_;
      team1_ = other.team1_;
      team2_ = other.team2_;
      stage_ = other.stage_;
      tickets_ = other.tickets_;
      price_ = other.price_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MatchDTO Clone() {
      return new MatchDTO(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "team1" field.</summary>
    public const int Team1FieldNumber = 2;
    private string team1_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Team1 {
      get { return team1_; }
      set {
        team1_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "team2" field.</summary>
    public const int Team2FieldNumber = 3;
    private string team2_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Team2 {
      get { return team2_; }
      set {
        team2_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "stage" field.</summary>
    public const int StageFieldNumber = 4;
    private string stage_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Stage {
      get { return stage_; }
      set {
        stage_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "tickets" field.</summary>
    public const int TicketsFieldNumber = 5;
    private int tickets_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Tickets {
      get { return tickets_; }
      set {
        tickets_ = value;
      }
    }

    /// <summary>Field number for the "price" field.</summary>
    public const int PriceFieldNumber = 6;
    private double price_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double Price {
      get { return price_; }
      set {
        price_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MatchDTO);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MatchDTO other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Team1 != other.Team1) return false;
      if (Team2 != other.Team2) return false;
      if (Stage != other.Stage) return false;
      if (Tickets != other.Tickets) return false;
      if (Price != other.Price) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (Team1.Length != 0) hash ^= Team1.GetHashCode();
      if (Team2.Length != 0) hash ^= Team2.GetHashCode();
      if (Stage.Length != 0) hash ^= Stage.GetHashCode();
      if (Tickets != 0) hash ^= Tickets.GetHashCode();
      if (Price != 0D) hash ^= Price.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Team1.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Team1);
      }
      if (Team2.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Team2);
      }
      if (Stage.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Stage);
      }
      if (Tickets != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Tickets);
      }
      if (Price != 0D) {
        output.WriteRawTag(49);
        output.WriteDouble(Price);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (Team1.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Team1);
      }
      if (Team2.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Team2);
      }
      if (Stage.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Stage);
      }
      if (Tickets != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Tickets);
      }
      if (Price != 0D) {
        size += 1 + 8;
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MatchDTO other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.Team1.Length != 0) {
        Team1 = other.Team1;
      }
      if (other.Team2.Length != 0) {
        Team2 = other.Team2;
      }
      if (other.Stage.Length != 0) {
        Stage = other.Stage;
      }
      if (other.Tickets != 0) {
        Tickets = other.Tickets;
      }
      if (other.Price != 0D) {
        Price = other.Price;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            Team1 = input.ReadString();
            break;
          }
          case 26: {
            Team2 = input.ReadString();
            break;
          }
          case 34: {
            Stage = input.ReadString();
            break;
          }
          case 40: {
            Tickets = input.ReadInt32();
            break;
          }
          case 49: {
            Price = input.ReadDouble();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Request : pb::IMessage<Request> {
    private static readonly pb::MessageParser<Request> _parser = new pb::MessageParser<Request>(() => new Request());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Request> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Generated.Protobuf.AppServiceReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Request() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Request(Request other) : this() {
      type_ = other.type_;
      error_ = other.error_;
      Sale = other.sale_ != null ? other.Sale.Clone() : null;
      User = other.user_ != null ? other.User.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Request Clone() {
      return new Request(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private global::Generated.Protobuf.Request.Types.Type type_ = 0;
    /// <summary>
    ///Every request have a type
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Generated.Protobuf.Request.Types.Type Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "error" field.</summary>
    public const int ErrorFieldNumber = 2;
    private string error_ = "";
    /// <summary>
    ///A request shold have:
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Error {
      get { return error_; }
      set {
        error_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "sale" field.</summary>
    public const int SaleFieldNumber = 3;
    private global::Generated.Protobuf.SaleDTO sale_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Generated.Protobuf.SaleDTO Sale {
      get { return sale_; }
      set {
        sale_ = value;
      }
    }

    /// <summary>Field number for the "user" field.</summary>
    public const int UserFieldNumber = 4;
    private global::Generated.Protobuf.UserDTO user_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Generated.Protobuf.UserDTO User {
      get { return user_; }
      set {
        user_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Request);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Request other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (Error != other.Error) return false;
      if (!object.Equals(Sale, other.Sale)) return false;
      if (!object.Equals(User, other.User)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Type != 0) hash ^= Type.GetHashCode();
      if (Error.Length != 0) hash ^= Error.GetHashCode();
      if (sale_ != null) hash ^= Sale.GetHashCode();
      if (user_ != null) hash ^= User.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Type != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Type);
      }
      if (Error.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Error);
      }
      if (sale_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Sale);
      }
      if (user_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(User);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (Error.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Error);
      }
      if (sale_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Sale);
      }
      if (user_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(User);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Request other) {
      if (other == null) {
        return;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      if (other.Error.Length != 0) {
        Error = other.Error;
      }
      if (other.sale_ != null) {
        if (sale_ == null) {
          sale_ = new global::Generated.Protobuf.SaleDTO();
        }
        Sale.MergeFrom(other.Sale);
      }
      if (other.user_ != null) {
        if (user_ == null) {
          user_ = new global::Generated.Protobuf.UserDTO();
        }
        User.MergeFrom(other.User);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            type_ = (global::Generated.Protobuf.Request.Types.Type) input.ReadEnum();
            break;
          }
          case 18: {
            Error = input.ReadString();
            break;
          }
          case 26: {
            if (sale_ == null) {
              sale_ = new global::Generated.Protobuf.SaleDTO();
            }
            input.ReadMessage(sale_);
            break;
          }
          case 34: {
            if (user_ == null) {
              user_ = new global::Generated.Protobuf.UserDTO();
            }
            input.ReadMessage(user_);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the Request message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum Type {
        [pbr::OriginalName("UNKNOW")] Unknow = 0,
        [pbr::OriginalName("LOGIN")] Login = 1,
        [pbr::OriginalName("LOGOUT")] Logout = 2,
        [pbr::OriginalName("SELL_TICKETS")] SellTickets = 3,
        [pbr::OriginalName("GET_ALL")] GetAll = 4,
        [pbr::OriginalName("GET_ALL_FILTERED_SORTED")] GetAllFilteredSorted = 5,
      }

    }
    #endregion

  }

  public sealed partial class Response : pb::IMessage<Response> {
    private static readonly pb::MessageParser<Response> _parser = new pb::MessageParser<Response>(() => new Response());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Response> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Generated.Protobuf.AppServiceReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Response() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Response(Response other) : this() {
      type_ = other.type_;
      error_ = other.error_;
      Match = other.match_ != null ? other.Match.Clone() : null;
      matchList_ = other.matchList_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Response Clone() {
      return new Response(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private global::Generated.Protobuf.Response.Types.Type type_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Generated.Protobuf.Response.Types.Type Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "error" field.</summary>
    public const int ErrorFieldNumber = 2;
    private string error_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Error {
      get { return error_; }
      set {
        error_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "match" field.</summary>
    public const int MatchFieldNumber = 3;
    private global::Generated.Protobuf.MatchDTO match_;
    /// <summary>
    ///Match shold be modified match,getAll match or getAllFilteredAndSorted match
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Generated.Protobuf.MatchDTO Match {
      get { return match_; }
      set {
        match_ = value;
      }
    }

    /// <summary>Field number for the "matchList" field.</summary>
    public const int MatchListFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Generated.Protobuf.MatchDTO> _repeated_matchList_codec
        = pb::FieldCodec.ForMessage(34, global::Generated.Protobuf.MatchDTO.Parser);
    private readonly pbc::RepeatedField<global::Generated.Protobuf.MatchDTO> matchList_ = new pbc::RepeatedField<global::Generated.Protobuf.MatchDTO>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Generated.Protobuf.MatchDTO> MatchList {
      get { return matchList_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Response);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Response other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (Error != other.Error) return false;
      if (!object.Equals(Match, other.Match)) return false;
      if(!matchList_.Equals(other.matchList_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Type != 0) hash ^= Type.GetHashCode();
      if (Error.Length != 0) hash ^= Error.GetHashCode();
      if (match_ != null) hash ^= Match.GetHashCode();
      hash ^= matchList_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Type != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Type);
      }
      if (Error.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Error);
      }
      if (match_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Match);
      }
      matchList_.WriteTo(output, _repeated_matchList_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (Error.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Error);
      }
      if (match_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Match);
      }
      size += matchList_.CalculateSize(_repeated_matchList_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Response other) {
      if (other == null) {
        return;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      if (other.Error.Length != 0) {
        Error = other.Error;
      }
      if (other.match_ != null) {
        if (match_ == null) {
          match_ = new global::Generated.Protobuf.MatchDTO();
        }
        Match.MergeFrom(other.Match);
      }
      matchList_.Add(other.matchList_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            type_ = (global::Generated.Protobuf.Response.Types.Type) input.ReadEnum();
            break;
          }
          case 18: {
            Error = input.ReadString();
            break;
          }
          case 26: {
            if (match_ == null) {
              match_ = new global::Generated.Protobuf.MatchDTO();
            }
            input.ReadMessage(match_);
            break;
          }
          case 34: {
            matchList_.AddEntriesFrom(input, _repeated_matchList_codec);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the Response message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum Type {
        [pbr::OriginalName("UNKNOW")] Unknow = 0,
        [pbr::OriginalName("OK")] Ok = 1,
        [pbr::OriginalName("ERROR")] Error = 2,
        [pbr::OriginalName("SHOW_UPDATED_ENTITIES")] ShowUpdatedEntities = 3,
        [pbr::OriginalName("GET_LOGGED_FRIENDS")] GetLoggedFriends = 4,
        [pbr::OriginalName("FRIEND_LOGGED_IN")] FriendLoggedIn = 5,
        [pbr::OriginalName("FRIEND_LOGGED_OUT")] FriendLoggedOut = 6,
        [pbr::OriginalName("SOLD")] Sold = 7,
      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
